version: 2.1

orbs:
  node: circleci/node@5.2.0

jobs:
  build_and_test:
    machine:
      image: ubuntu-2204:2024.01.1
    steps:
      - checkout
      - node/install:
          node-version: '21.7'
      - run:
          name: Install requirements
          command: npm install
      - run:
          name: Run tests
          command: npm run test
  publish_canary:
    machine:
      image: ubuntu-2204:2024.01.1
    steps:
      - checkout
      - run:
          name: Check commit message for canary build
          command: |
            commit_message=$(git log -1 --pretty=%B)
            if [[ "$commit_message" == *"-canarytest."* ]]; then
              echo "Skipping canary publish for commit: $commit_message"
              exit 0
            fi
      - node/install:
          node-version: '21.7'
      - run:
          name: Install requirements
          command: npm install
      - run:
          name: Bump canary version
          command: npm version prerelease --preid=canarytest
      - run:
          name: Authenticate with NPM registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run:
          name: Publish canary package
          command: |
            npm publish --tag canarytest
            if [ $? -ne 0 ]; then
              echo "npm publish failed, stopping the job."
              exit 1
            fi
      - run:
          name: Push canary version and tag
          command: git push origin HEAD --tags
  validate_main_version:
    machine:
      image: ubuntu-2204:2024.01.1
    steps:
      - checkout
      - run:
          name: Validate version
          command: ./bin/validate_version.sh
  publish:
    machine:
      image: ubuntu-2204:2024.01.1
      resource_class: large
    steps:
      - checkout
      - node/install:
          node-version: '21.7'
      - run:
          name: Authenticate with NPM registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - run:
          name: Install requirements
          command: npm install
      - run:
          name: Publish package
          command: npm publish
workflows:
  CI:
    jobs:
      - build_and_test
      - publish_canary:
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - prerelease-version-control # TODO: To be replaced by `dev`
      - validate_main_version:
          requires:
            - build_and_test
          filters:
            branches:
              only:
                - main
      - require_approval:
          type: approval
          filters:
            branches:
              only:
                - main
      - publish:
          requires:
            - build_and_test
            - require_approval
            - validate_main_version
          filters:
            tags:
              only: /.*/
            branches:
              only:
                - main